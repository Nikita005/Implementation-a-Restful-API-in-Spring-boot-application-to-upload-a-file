Implementation a Restful API in Spring-boot application to upload a file with a few meta-data fields. 
Persist meta-data in persistent store (In memory DB or file system and store the content on a file system). 

The Spring Boot File Upload Rest Service

1)	It can upload the single file with rest POST call.
2)	The metadata of the uploaded file will be stored in the H2 in memory database.
3)	By using GET call we can get the uploaded file metadata.

How to test the Rest- API
1)	Using the Single file upload:  http://localhost/8080/fileUpload
In Postman by using the method has POST and selecting the body as form data, chose the file from the system. Eg: c://desktop//users//test.txt.

Output for the above rest call: It gives the message as File_Name uploaded Successfully. Uploaded folder path is hard coded in FileUploadController.java. 
These paths has to be changed according to the system. The uploaded file will present in that folder.

2)	Using the GET call: http://localhost/8080/getFileMetaData
In postman by using the method as GET and select the body as raw, send the request. We will get the metadata response in JSON format.
Eg: Request: GET http://localhost:8080/getFileMetaData
      Response: GET [{ "name": "testFile1.txt", "contentType": "text/plain", "contentSize": 28}, { "name": "testFile2.txt", "contentType": "text/plain", "contentSize": 25 }] 

•	If this spring boot application run for second time please uncomment the drop statement in schema.sql. So that for the second time the already existed table will be dropped and creates new table in h2 database. 
•	The metadata of the uploaded file can be viewed in h2- console at http://localhost:8080/h2-console. To view the metadata records login to the jdbc:h2:file:./DB.
3)	Junit TestCase with Mockito has been written for testing uploaded the file. 

